/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RelativeImport } from './routes/relative'
import { Route as NameImport } from './routes/name'
import { Route as AdminImport } from './routes/admin'
import { Route as AbsoluteImport } from './routes/absolute'
import { Route as IndexImport } from './routes/index'
import { Route as ViewIdImport } from './routes/view/$id'
import { Route as BlogLayoutImport } from './routes/blog/_layout'
import { Route as BlogLayoutIndexImport } from './routes/blog/_layout/index'
import { Route as BlogLayoutSecondBlogImport } from './routes/blog/_layout/second-blog'
import { Route as BlogLayoutFirstBlogImport } from './routes/blog/_layout/first-blog'

// Create Virtual Routes

const BlogImport = createFileRoute('/blog')()

// Create/Update Routes

const BlogRoute = BlogImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const RelativeRoute = RelativeImport.update({
  path: '/relative',
  getParentRoute: () => rootRoute,
} as any)

const NameRoute = NameImport.update({
  path: '/name',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AbsoluteRoute = AbsoluteImport.update({
  path: '/absolute',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ViewIdRoute = ViewIdImport.update({
  path: '/view/$id',
  getParentRoute: () => rootRoute,
} as any)

const BlogLayoutRoute = BlogLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => BlogRoute,
} as any)

const BlogLayoutIndexRoute = BlogLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => BlogLayoutRoute,
} as any)

const BlogLayoutSecondBlogRoute = BlogLayoutSecondBlogImport.update({
  path: '/second-blog',
  getParentRoute: () => BlogLayoutRoute,
} as any)

const BlogLayoutFirstBlogRoute = BlogLayoutFirstBlogImport.update({
  path: '/first-blog',
  getParentRoute: () => BlogLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/absolute': {
      preLoaderRoute: typeof AbsoluteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/name': {
      preLoaderRoute: typeof NameImport
      parentRoute: typeof rootRoute
    }
    '/relative': {
      preLoaderRoute: typeof RelativeImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/blog/_layout': {
      preLoaderRoute: typeof BlogLayoutImport
      parentRoute: typeof BlogRoute
    }
    '/view/$id': {
      preLoaderRoute: typeof ViewIdImport
      parentRoute: typeof rootRoute
    }
    '/blog/_layout/first-blog': {
      preLoaderRoute: typeof BlogLayoutFirstBlogImport
      parentRoute: typeof BlogLayoutImport
    }
    '/blog/_layout/second-blog': {
      preLoaderRoute: typeof BlogLayoutSecondBlogImport
      parentRoute: typeof BlogLayoutImport
    }
    '/blog/_layout/': {
      preLoaderRoute: typeof BlogLayoutIndexImport
      parentRoute: typeof BlogLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AbsoluteRoute,
  AdminRoute,
  NameRoute,
  RelativeRoute,
  BlogRoute.addChildren([
    BlogLayoutRoute.addChildren([
      BlogLayoutFirstBlogRoute,
      BlogLayoutSecondBlogRoute,
      BlogLayoutIndexRoute,
    ]),
  ]),
  ViewIdRoute,
])

/* prettier-ignore-end */
